{"version":3,"sources":["containers/Form/classes/FormReducerState.ts","containers/Form/reducers/form.reducer.ts","containers/Form/actionTypes/form.actionTypes.ts","store/combinedReducer.ts","store/store.ts","containers/Routes/history.ts","components/Button/Button.tsx","components/Progress/Progress.tsx","components/Checkbox/Checkbox.tsx","components/InlineRadioButton/InlineRadioButton.tsx","components/Label/Label.tsx","components/TextBox/TextBox.tsx","components/Question/Question.tsx","components/Section/Section.tsx","components/Page/Page.tsx","containers/Form/actionCreators/form.actionCreators.ts","containers/Form/actions/form.actions.ts","components/Submit/Submit.tsx","containers/Form/Form.tsx","containers/Routes/Routes.tsx","containers/App/App.tsx","index.tsx"],"names":["defaultConfig","require","initialState","config","page","this","FormReducer","state","action","type","payload","combineReducers","form","store","createStore","reducer","history","createBrowserHistory","path","exec","window","location","href","replace","Button","props","label","color","onClick","className","defaultProps","Progress","percent","Checkbox","onChange","id","String","QuestionID","checked","Value","htmlFor","Label","InlineRadioButton","handleChange","event","target","value","Options","map","radioButton","index","key","QuestionOptionID","name","Description","TextBox","Question","section","question","onAnswerQuestion","handleAnswerQuestion","UI","Section","Questions","Page","Sections","SectionID","setConfig","setPage","changePage","dispatch","increment","showElement","limit","Submit","pageIndex","sectionIndex","questionIndex","Form","current","total","useSelector","selectors","useDispatch","newConfig","answerQuestion","length","Routes","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"m/GAEMA,EAAgBC,EAAQ,ICKxBC,EAAe,IDEnB,WAAYC,EAAuBC,GAAgB,yBAJnDD,YAIkD,OAFlDC,UAEkD,EAChDC,KAAKF,OAASA,GAAUH,EACxBK,KAAKD,KAAOA,GAAQ,GCWTE,EAbK,WAAwC,IAAvCC,EAAsC,uDAA9BL,EAAcM,EAAgB,uCACzD,OAAQA,EAAOC,MACb,ICXsB,aDYpB,OAAO,2BAAKF,GAAZ,IAAmBJ,OAAQK,EAAOE,UACpC,ICZoB,WDalB,OAAO,2BAAKH,GAAZ,IAAmBH,KAAMI,EAAOE,UAClC,ICb0B,iBDcxB,OAAOF,EAAOE,QAChB,QACE,OAAOH,IEfEI,cAAgB,CAC7BC,KAAMN,ICCOO,EAFDC,YAAYC,G,uBCDpBC,EAAUC,cACVC,GAAQ,YAAYC,KAAKC,OAAOC,SAASC,OAAS,IAAI,GACxDJ,GACFF,EAAQO,QAAQL,GAGHF,QCCTQ,G,MAAoB,SAACC,GAAkB,IACnCC,EAA0BD,EAA1BC,MAAOC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,QAEtB,OACE,4BAAQC,UAAS,qCAAgCF,GAASC,QAASA,GAChEF,KAKPF,EAAOM,aAAe,CACpBJ,MAAO,GACPC,MAAO,MACPC,QAAS,cAGIJ,QClBTO,G,MAAsB,SAACN,GAAkB,IACrCO,EAAYP,EAAZO,QAER,OACE,yBAAKH,UAAU,sBACb,0BAAMA,UAAU,iBAAhB,aAA2CG,EAA3C,QAKND,EAASD,aAAe,CACtBE,QAAS,GAGID,QCZTE,G,MAAsB,SAACR,GAAkB,IACrCtB,EAAqBsB,EAArBtB,OAAQ+B,EAAaT,EAAbS,SAMhB,OACE,yBAAKL,UAAU,sBACb,2BACEpB,KAAK,WACL0B,GAAIC,OAAOjC,EAAOkC,YAClBC,UAAUnC,EAAOoC,MACjBL,SAVe,WACnBA,GAAU/B,EAAOoC,UAWf,2BAAOV,UAAU,iBAAiBW,QAASJ,OAAOjC,EAAOkC,aACtDlC,EAAOsC,UAMhBR,EAASH,aAAe,CACtB3B,OAAQ,KACR+B,SAAU,cAGGD,QC3BTS,G,MAA+B,SAACjB,GAAkB,IAC9CtB,EAAqBsB,EAArBtB,OAAQ+B,EAAaT,EAAbS,SAEVS,EAAe,SAACC,GACpBV,EAASU,EAAMC,OAAOC,QAGxB,OACE,yBAAKjB,UAAU,+BACb,yBAAKA,UAAU,2BAA2B1B,EAAOsC,OAChDtC,EAAO4C,QAAQC,KACd,SAACC,EAAmCC,GAClC,OACE,yBACErB,UAAU,gCACVsB,IAAG,yBAAoBD,IAEvB,2BACErB,UAAU,0BACVpB,KAAK,QACL0B,GAAIC,OAAOa,EAAYG,kBACvBC,KAAMjB,OAAOa,EAAYZ,YACzBS,MAAOG,EAAYV,MACnBD,QAASnC,EAAOoC,QAAUU,EAAYV,MACtCL,SAAUS,IAEZ,2BACEH,QAASJ,OAAOa,EAAYG,kBAC5BvB,UAAU,2BAEToB,EAAYK,oBAU7BZ,EAAkBZ,aAAe,CAC/B3B,OAAQ,KACR+B,SAAU,cAGGQ,QC9CTD,G,MAAmB,SAAChB,GAAkB,IAClCtB,EAAWsB,EAAXtB,OAER,OAAO,yBAAK0B,UAAU,eAAe1B,EAAOsC,SAG9CA,EAAMX,aAAe,CACnB3B,OAAQ,MAGKsC,QCTTc,G,MAAqB,SAAC9B,GAAkB,IACpCtB,EAAqBsB,EAArBtB,OAAQ+B,EAAaT,EAAbS,SAMhB,OACE,yBAAKL,UAAU,qBACb,2BACEpB,KAAK,OACL0B,GAAIC,OAAOjC,EAAOkC,YAClBS,MAAgC,kBAAjB3C,EAAOoC,OAAsBpC,EAAOoC,OAAU,GAC7DL,SAVe,SAACU,GACpBV,EAASU,EAAMC,OAAOC,UAWpB,2BAAOjB,UAAU,gBAAgBW,QAASJ,OAAOjC,EAAOkC,aACrDlC,EAAOsC,UAMhBc,EAAQzB,aAAe,CACrB3B,OAAQ,KACR+B,SAAU,cAGGqB,QCfTC,G,MAAsB,SAAC/B,GAAkB,IACrCtB,EAAsDsB,EAAtDtB,OAAQC,EAA8CqB,EAA9CrB,KAAMqD,EAAwChC,EAAxCgC,QAASC,EAA+BjC,EAA/BiC,SAAUC,EAAqBlC,EAArBkC,iBAEnCC,EAAuB,SAACd,GAC5Ba,EAAiBvD,EAAMqD,EAASC,EAAUZ,IAG5C,OAAQ3C,EAAO0D,IACb,IAAK,KACH,OAAO,kBAAC,EAAD,CAAU1D,OAAQA,EAAQ+B,SAAU0B,IAC7C,IAAK,KACH,OAAO,kBAAC,EAAD,CAAOzD,OAAQA,IACxB,IAAK,OACH,OACE,kBAAC,EAAD,CAAmBA,OAAQA,EAAQ+B,SAAU0B,IAEjD,IAAK,KACH,OAAO,kBAAC,EAAD,CAASzD,OAAQA,EAAQ+B,SAAU0B,IAC5C,QACE,OAAO,QAIbJ,EAAS1B,aAAe,CACtB3B,OAAQ,KACRC,KAAM,EACNqD,QAAS,EACTC,SAAU,EACVC,iBAAkB,cAGLH,QCnCTM,G,MAAqB,SAACrC,GAAkB,IACpCtB,EAA4CsB,EAA5CtB,OAAQC,EAAoCqB,EAApCrB,KAAMqD,EAA8BhC,EAA9BgC,QAASE,EAAqBlC,EAArBkC,iBAE/B,OACE,yBAAK9B,UAAU,qBACb,yBAAKA,UAAU,iBAAiB1B,EAAOsC,OACvC,yBAAKZ,UAAU,8BACZ1B,EAAO4D,UAAUf,KAAI,SAACU,EAA0BR,GAC/C,OACE,yBACErB,UAAW,4BACXsB,IAAKO,EAASrB,YAEd,kBAAC,EAAD,CACElC,OAAQuD,EACRtD,KAAMA,EACNqD,QAASA,EACTC,SAAUR,EACVS,iBAAkBA,YAUlCG,EAAQhC,aAAe,CACrB3B,OAAQ,KACRC,KAAM,EACNqD,QAAS,EACTE,iBAAkB,cAGLG,QCpCTE,G,MAAkB,SAACvC,GAAkB,IACjCtB,EAAmCsB,EAAnCtB,OAAQC,EAA2BqB,EAA3BrB,KAAMuD,EAAqBlC,EAArBkC,iBAEtB,OACE,yBAAK9B,UAAU,kBACb,yBAAKA,UAAU,cAAc1B,EAAOsC,OACpC,yBAAKZ,UAAU,0BACZ1B,EAAO8D,SAASjB,KAAI,SAACS,EAAwBP,GAC5C,OACE,kBAAC,EAAD,CACE/C,OAAQsD,EACRrD,KAAMA,EACNqD,QAASP,EACTS,iBAAkBA,EAClBR,IAAKM,EAAQS,mBAS3BF,EAAKlC,aAAe,CAClB3B,OAAQ,KACRC,KAAM,EACNuD,iBAAkB,cAGLK,QChCFG,EAAY,SAAChE,GACxB,MAAO,CAAEM,Kbde,aacGC,QAASP,IAGzBiE,EAAU,SAAChE,GACtB,MAAO,CAAEK,KbjBa,WaiBGC,QAASN,I,QCfvBiE,EAAa,SACxBC,EACAlE,EACAmE,EACAH,GAEAE,EAASF,EAAQhE,EAAOmE,KAObC,EAAc,SAACpE,EAAcqE,GACxC,OAAIrE,IAASqE,GCFTC,G,YAAoB,SAACjD,GAAkB,IACnCtB,EAA6BsB,EAA7BtB,OAAQwD,EAAqBlC,EAArBkC,iBAEhB,OACE,yBAAK9B,UAAU,oBACb,yBAAKA,UAAU,gBAAf,uBACA,yBAAKA,UAAU,sBAAf,0CAGC1B,EAAO6C,KAAI,SAAC5C,EAAkBuE,GAC7B,OAAOvE,EAAK6D,SAASjB,KACnB,SAACS,EAAwBmB,GACvB,OAAOnB,EAAQM,UAAUf,KACvB,SAACU,EAA0BmB,GACzB,OACE,yBACEhD,UAAU,2BACVsB,IAAKO,EAASrB,YAEd,kBAAC,EAAD,CACElC,OAAQuD,EACRtD,KAAMuE,EACNlB,QAASmB,EACTlB,SAAUmB,EACVlB,iBAAkBA,iBAaxCe,EAAO5C,aAAe,CACpB3B,OAAQ,GACRwD,iBAAkB,cAGLe,QC1CTI,EAAgB,WAAO,IFHKC,EAAiBC,EEGvB,EACDC,aAAY,SAACC,GAAD,OAAoBA,EAAUtE,QAA3DT,EADkB,EAClBA,OAAQC,EADU,EACVA,KACVkE,EAAWa,cAUXvB,EAAuB,SAC3BxD,EACAqD,EACAC,EACAZ,IFP0B,SAC5BwB,EACAnE,EACAC,EACAqD,EACAC,EACAZ,EACAqB,GAEA,IAAMiB,EAAS,YAAOjF,GAEtBiF,EAAUhF,GAAM6D,SAASR,GAASM,UAAUL,GAAUnB,MAAQO,EAE9DwB,EAASH,EAAUiB,IEJjBC,CAAef,EAAUnE,EAAQC,EAAMqD,EAASC,EAAUZ,EAAOqB,IAGnE,OACE,yBAAKtC,UAAU,kBACb,yBAAKA,UAAU,0BACb,kBAAC,EAAD,CAAUG,SF3BgB+C,EE2BW3E,EF3BM4E,EE2BA7E,EAAOmF,OF1BhDP,EAAUC,EAAS,QE4BvB,yBAAKnD,UAAU,sBACZ2C,EAAYpE,EAAMD,EAAOmF,SACxB,kBAAC,EAAD,CACEnF,OAAQA,EAAOC,GACfA,KAAMA,EACNuD,iBAAkBC,KAGpBY,EAAYpE,EAAMD,EAAOmF,SACzB,kBAAC,EAAD,CAAQnF,OAAQA,EAAQwD,iBAAkBC,KAG9C,yBAAK/B,UAAU,yBACZ2C,EAAYpE,EAAM,IAAMoE,EAAYpE,EAAMD,EAAOmF,SAChD,kBAAC,EAAD,CACE5D,MAAM,YACNC,MAAM,MACNC,QAvCsB,WAC9ByC,EAAWC,EAAUlE,GAAO,EAAGgE,MA0CzBI,EAAYpE,EAAMD,EAAOmF,SACzB,kBAAC,EAAD,CACE5D,MAAM,YACNC,MAAM,OACNC,QA3CkB,WAC1ByC,EAAWC,EAAUlE,EAAM,EAAGgE,OA4CpB,kBAAC,EAAD,CAAQ1C,MAAM,SAASC,MAAM,OAAOC,QAAS,UAM3DkD,EAAKhD,aAAe,CAClB3B,OAAQ,MAGK2E,QC5DAS,G,MAZS,WACtB,OACE,yBAAK1D,UAAU,oBACb,kBAAC,IAAD,CAAYb,QAASA,GACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,IAAIsE,UAAWV,SCGtBW,G,MARM,WACnB,OACE,kBAAC,IAAD,CAAU5E,MAAOA,GACf,kBAAC,EAAD,SCLN6E,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.64a4a875.chunk.js","sourcesContent":["import { PageConfig } from '../../../types/form';\n\nconst defaultConfig = require('../../../data/form.json');\n\nclass FormReducerState {\n  config?: PageConfig[];\n\n  page?: number;\n\n  constructor(config?: PageConfig[], page?: number) {\n    this.config = config || defaultConfig;\n    this.page = page || 0;\n  }\n}\n\nexport default FormReducerState;\n","import FormReducerState from '../classes/FormReducerState';\nimport {\n  SET_CONFIG,\n  SET_FORM_STATE,\n  SET_PAGE,\n} from '../actionTypes/form.actionTypes';\n\nconst initialState = new FormReducerState();\n\nconst FormReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case SET_CONFIG:\n      return { ...state, config: action.payload };\n    case SET_PAGE:\n      return { ...state, page: action.payload };\n    case SET_FORM_STATE:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default FormReducer;\n","export const SET_CONFIG = 'SET_CONFIG';\nexport const SET_PAGE = 'SET_PAGE';\nexport const SET_FORM_STATE = 'SET_FORM_STATE';\n","import { combineReducers } from 'redux';\nimport FormReducer from '../containers/Form/reducers/form.reducer';\n\nexport default combineReducers({\n  form: FormReducer,\n});\n","import { createStore } from 'redux';\nimport reducer from './combinedReducer';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\nconst path = (/#!(\\/.*)$/.exec(window.location.href) || [])[1];\nif (path) {\n  history.replace(path);\n}\n\nexport default history;\n","import React, { FC } from 'react';\nimport './Button.scss';\n\ninterface Props {\n  label?: string;\n  color?: 'Red' | 'Blue';\n  onClick?: () => void;\n}\n\nconst Button: FC<Props> = (props: Props) => {\n  const { label, color, onClick } = props;\n\n  return (\n    <button className={`Button-button Button-button${color}`} onClick={onClick}>\n      {label}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  label: '',\n  color: 'Red',\n  onClick: () => {},\n};\n\nexport default Button;\n","import React, { FC } from 'react';\nimport './Progress.scss';\n\ninterface Props {\n  percent?: number;\n}\n\nconst Progress: FC<Props> = (props: Props) => {\n  const { percent } = props;\n\n  return (\n    <div className=\"Progress-container\">\n      <span className=\"Progress-text\">Progress: {percent}%</span>\n    </div>\n  );\n};\n\nProgress.defaultProps = {\n  percent: 0,\n};\n\nexport default Progress;\n","import React, { FC } from 'react';\nimport { QuestionConfig } from '../../types/form';\nimport './Checkbox.scss';\n\ninterface Props {\n  config?: QuestionConfig;\n  onChange?: (value: string | boolean) => void;\n}\n\nconst Checkbox: FC<Props> = (props: Props) => {\n  const { config, onChange } = props;\n\n  const handleChange = () => {\n    onChange(!config.Value);\n  };\n\n  return (\n    <div className=\"Checkbox-container\">\n      <input\n        type=\"checkbox\"\n        id={String(config.QuestionID)}\n        checked={(config.Value && true) || false}\n        onChange={handleChange}\n      />\n      <label className=\"Checkbox-label\" htmlFor={String(config.QuestionID)}>\n        {config.Label}\n      </label>\n    </div>\n  );\n};\n\nCheckbox.defaultProps = {\n  config: null,\n  onChange: () => {},\n};\n\nexport default Checkbox;\n","import React, { FC } from 'react';\nimport { QuestionConfig, QuestionOptionConfig } from '../../types/form';\nimport './InlineRadioButton.scss';\n\ninterface Props {\n  config?: QuestionConfig;\n  onChange?: (value: string | boolean) => void;\n}\n\nconst InlineRadioButton: FC<Props> = (props: Props) => {\n  const { config, onChange } = props;\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <div className=\"InlineRadioButton-container\">\n      <div className=\"InlineRadioButton-title\">{config.Label}</div>\n      {config.Options.map(\n        (radioButton: QuestionOptionConfig, index: number) => {\n          return (\n            <div\n              className=\"InlineRadioButton-radioButton\"\n              key={`questionOption-${index}`}\n            >\n              <input\n                className=\"InlineRadioButton-input\"\n                type=\"radio\"\n                id={String(radioButton.QuestionOptionID)}\n                name={String(radioButton.QuestionID)}\n                value={radioButton.Value}\n                checked={config.Value === radioButton.Value}\n                onChange={handleChange}\n              />\n              <label\n                htmlFor={String(radioButton.QuestionOptionID)}\n                className=\"InlineRadioButton-label\"\n              >\n                {radioButton.Description}\n              </label>\n            </div>\n          );\n        }\n      )}\n    </div>\n  );\n};\n\nInlineRadioButton.defaultProps = {\n  config: null,\n  onChange: () => {},\n};\n\nexport default InlineRadioButton;\n","import React, { FC } from 'react';\nimport { QuestionConfig } from '../../types/form';\nimport './Label.scss';\n\ninterface Props {\n  config?: QuestionConfig;\n}\n\nconst Label: FC<Props> = (props: Props) => {\n  const { config } = props;\n\n  return <div className=\"Label-title\">{config.Label}</div>;\n};\n\nLabel.defaultProps = {\n  config: null,\n};\n\nexport default Label;\n","import React, { FC } from 'react';\nimport { QuestionConfig } from '../../types/form';\nimport './TextBox.scss';\n\ninterface Props {\n  config?: QuestionConfig;\n  onChange?: (value: string | boolean) => void;\n}\n\nconst TextBox: FC<Props> = (props: Props) => {\n  const { config, onChange } = props;\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <div className=\"TextBox-container\">\n      <input\n        type=\"text\"\n        id={String(config.QuestionID)}\n        value={(typeof config.Value === 'string' && config.Value) || ''}\n        onChange={handleChange}\n      />\n      <label className=\"TextBox-label\" htmlFor={String(config.QuestionID)}>\n        {config.Label}\n      </label>\n    </div>\n  );\n};\n\nTextBox.defaultProps = {\n  config: null,\n  onChange: () => {},\n};\n\nexport default TextBox;\n","import React, { FC } from 'react';\nimport { QuestionConfig } from '../../types/form';\nimport Checkbox from '../Checkbox/Checkbox';\nimport InlineRadioButton from '../InlineRadioButton/InlineRadioButton';\nimport Label from '../Label/Label';\nimport TextBox from '../TextBox/TextBox';\nimport './Question.scss';\n\ninterface Props {\n  config?: QuestionConfig;\n  page?: number;\n  section?: number;\n  question?: number;\n  onAnswerQuestion?: (\n    page: number,\n    section: number,\n    question: number,\n    value: string | boolean\n  ) => void;\n}\n\nconst Question: FC<Props> = (props: Props) => {\n  const { config, page, section, question, onAnswerQuestion } = props;\n\n  const handleAnswerQuestion = (value: string | boolean) => {\n    onAnswerQuestion(page, section, question, value);\n  };\n\n  switch (config.UI) {\n    case 'cb':\n      return <Checkbox config={config} onChange={handleAnswerQuestion} />;\n    case 'lb':\n      return <Label config={config} />;\n    case 'rbil':\n      return (\n        <InlineRadioButton config={config} onChange={handleAnswerQuestion} />\n      );\n    case 'tb':\n      return <TextBox config={config} onChange={handleAnswerQuestion} />;\n    default:\n      return null;\n  }\n};\n\nQuestion.defaultProps = {\n  config: null,\n  page: 0,\n  section: 0,\n  question: 0,\n  onAnswerQuestion: () => {},\n};\n\nexport default Question;\n","import React, { FC } from 'react';\nimport { QuestionConfig, SectionConfig } from '../../types/form';\nimport Question from '../Question/Question';\nimport './Section.scss';\n\ninterface Props {\n  config?: SectionConfig;\n  page?: number;\n  section?: number;\n  onAnswerQuestion?: (\n    page: number,\n    section: number,\n    question: number,\n    value: string | boolean\n  ) => void;\n}\n\nconst Section: FC<Props> = (props: Props) => {\n  const { config, page, section, onAnswerQuestion } = props;\n\n  return (\n    <div className=\"Section-container\">\n      <div className=\"Section-title\">{config.Label}</div>\n      <div className=\"Section-questionsContainer\">\n        {config.Questions.map((question: QuestionConfig, index: number) => {\n          return (\n            <div\n              className={'Section-questionContainer'}\n              key={question.QuestionID}\n            >\n              <Question\n                config={question}\n                page={page}\n                section={section}\n                question={index}\n                onAnswerQuestion={onAnswerQuestion}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nSection.defaultProps = {\n  config: null,\n  page: 0,\n  section: 0,\n  onAnswerQuestion: () => {},\n};\n\nexport default Section;\n","import React, { FC } from 'react';\nimport Section from '../../components/Section/Section';\nimport { PageConfig, SectionConfig } from '../../types/form';\nimport './Page.scss';\n\ninterface Props {\n  config?: PageConfig;\n  page?: number;\n  onAnswerQuestion?: (\n    page: number,\n    section: number,\n    question: number,\n    value: string | boolean\n  ) => void;\n}\n\nconst Page: FC<Props> = (props: Props) => {\n  const { config, page, onAnswerQuestion } = props;\n\n  return (\n    <div className=\"Page-container\">\n      <div className=\"Page-title\">{config.Label}</div>\n      <div className=\"Page-sectionsContainer\">\n        {config.Sections.map((section: SectionConfig, index: number) => {\n          return (\n            <Section\n              config={section}\n              page={page}\n              section={index}\n              onAnswerQuestion={onAnswerQuestion}\n              key={section.SectionID}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nPage.defaultProps = {\n  config: null,\n  page: 0,\n  onAnswerQuestion: () => {},\n};\n\nexport default Page;\n","import {\n  ISetAnyAction,\n  ISetArrayAction,\n  ISetNumberAction,\n} from '../../../types/actions';\nimport { PageConfig } from '../../../types/form';\nimport {\n  SET_CONFIG,\n  SET_PAGE,\n  SET_FORM_STATE,\n} from '../actionTypes/form.actionTypes';\nimport FormReducerState from '../classes/FormReducerState';\n\nexport const setConfig = (config: PageConfig[]): ISetArrayAction => {\n  return { type: SET_CONFIG, payload: config };\n};\n\nexport const setPage = (page: number): ISetNumberAction => {\n  return { type: SET_PAGE, payload: page };\n};\n\nexport const setFormState = (state: FormReducerState): ISetAnyAction => {\n  return { type: SET_FORM_STATE, payload: state };\n};\n","import { Dispatch } from 'react';\nimport { PageConfig } from '../../../types/form';\n\nexport const changePage = (\n  dispatch: Dispatch<any>,\n  page: number,\n  increment: number,\n  setPage: (page: number) => void\n) => {\n  dispatch(setPage(page + increment));\n};\n\nexport const calculateProgress = (current: number, total: number) => {\n  return (current / total) * 100;\n};\n\nexport const showElement = (page: number, limit: number) => {\n  if (page === limit) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const answerQuestion = (\n  dispatch: Dispatch<any>,\n  config: PageConfig[],\n  page: number,\n  section: number,\n  question: number,\n  value: boolean | string,\n  setConfig: (config: PageConfig[]) => void\n) => {\n  const newConfig = [...config];\n\n  newConfig[page].Sections[section].Questions[question].Value = value;\n\n  dispatch(setConfig(newConfig));\n};\n","import React, { FC } from 'react';\nimport { PageConfig, QuestionConfig, SectionConfig } from '../../types/form';\nimport Question from '../Question/Question';\nimport './Submit.scss';\n\ninterface Props {\n  config?: PageConfig[];\n  onAnswerQuestion?: (\n    page: number,\n    section: number,\n    question: number,\n    value: string | boolean\n  ) => void;\n}\n\nconst Submit: FC<Props> = (props: Props) => {\n  const { config, onAnswerQuestion } = props;\n\n  return (\n    <div className=\"Submit-container\">\n      <div className=\"Submit-title\">Submit your answers</div>\n      <div className=\"Submit-description\">\n        Review your answers before submitting!\n      </div>\n      {config.map((page: PageConfig, pageIndex: number) => {\n        return page.Sections.map(\n          (section: SectionConfig, sectionIndex: number) => {\n            return section.Questions.map(\n              (question: QuestionConfig, questionIndex: number) => {\n                return (\n                  <div\n                    className=\"Submit-questionContainer\"\n                    key={question.QuestionID}\n                  >\n                    <Question\n                      config={question}\n                      page={pageIndex}\n                      section={sectionIndex}\n                      question={questionIndex}\n                      onAnswerQuestion={onAnswerQuestion}\n                    />\n                  </div>\n                );\n              }\n            );\n          }\n        );\n      })}\n    </div>\n  );\n};\n\nSubmit.defaultProps = {\n  config: [],\n  onAnswerQuestion: () => {},\n};\n\nexport default Submit;\n","import React, { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '../../components/Button/Button';\nimport Progress from '../../components/Progress/Progress';\nimport Page from '../../components/Page/Page';\nimport { setConfig, setPage } from './actionCreators/form.actionCreators';\nimport {\n  answerQuestion,\n  calculateProgress,\n  changePage,\n  showElement,\n} from './actions/form.actions';\nimport './Form.scss';\nimport Submit from '../../components/Submit/Submit';\n\nconst Form: FC<any> = () => {\n  const { config, page } = useSelector((selectors: any) => selectors.form);\n  const dispatch = useDispatch();\n\n  const handlePreviousPageClick = () => {\n    changePage(dispatch, page, -1, setPage);\n  };\n\n  const handleNextPageClick = () => {\n    changePage(dispatch, page, 1, setPage);\n  };\n\n  const handleAnswerQuestion = (\n    page: number,\n    section: number,\n    question: number,\n    value: string | boolean\n  ) => {\n    answerQuestion(dispatch, config, page, section, question, value, setConfig);\n  };\n\n  return (\n    <div className=\"Form-container\">\n      <div className=\"Form-progressContainer\">\n        <Progress percent={calculateProgress(page, config.length)} />\n      </div>\n      <div className=\"Form-pageContainer\">\n        {showElement(page, config.length) && (\n          <Page\n            config={config[page]}\n            page={page}\n            onAnswerQuestion={handleAnswerQuestion}\n          />\n        )}\n        {!showElement(page, config.length) && (\n          <Submit config={config} onAnswerQuestion={handleAnswerQuestion} />\n        )}\n      </div>\n      <div className=\"Form-buttonsContainer\">\n        {showElement(page, 0) && showElement(page, config.length) && (\n          <Button\n            label=\"<<<< Prev\"\n            color=\"Red\"\n            onClick={handlePreviousPageClick}\n          />\n        )}\n\n        {(showElement(page, config.length) && (\n          <Button\n            label=\"Next >>>>\"\n            color=\"Blue\"\n            onClick={handleNextPageClick}\n          />\n        )) || <Button label=\"Submit\" color=\"Blue\" onClick={null} />}\n      </div>\n    </div>\n  );\n};\n\nForm.defaultProps = {\n  config: null,\n};\n\nexport default Form;\n","import React, { FC } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport history from './history';\nimport Form from '../Form/Form';\nimport './Routes.scss';\n\nconst Routes: FC<any> = () => {\n  return (\n    <div className=\"Routes-container\">\n      <HashRouter history={history}>\n        <Switch>\n          <Route path=\"/\" component={Form} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n};\n\nexport default Routes;\n","import React, { FC } from 'react';\nimport { Provider } from 'react-redux';\nimport store from '../../store/store';\nimport Routes from '../Routes/Routes';\nimport './App.scss';\n\nconst App: FC<any> = () => {\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}